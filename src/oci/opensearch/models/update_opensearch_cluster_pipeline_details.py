# coding: utf-8
# Copyright (c) 2016, 2025, Oracle and/or its affiliates.  All rights reserved.
# This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.

# NOTE: This class is auto generated by OracleSDKGenerator. DO NOT EDIT. API Version: 20180828


from oci.util import formatted_flat_dict, NONE_SENTINEL, value_allowed_none_or_none_sentinel  # noqa: F401
from oci.decorators import init_model_state_from_kwargs


@init_model_state_from_kwargs
class UpdateOpensearchClusterPipelineDetails(object):
    """
    The configuration to update on an existing OpenSearch cluster pipeline. You can only edit capaccity limits and pipeline configuration. You can't edit its name or network settings.
    """

    def __init__(self, **kwargs):
        """
        Initializes a new UpdateOpensearchClusterPipelineDetails object with values from keyword arguments.
        The following keyword arguments are supported (corresponding to the getters/setters of this class):

        :param display_name:
            The value to assign to the display_name property of this UpdateOpensearchClusterPipelineDetails.
        :type display_name: str

        :param max_ocpu_count:
            The value to assign to the max_ocpu_count property of this UpdateOpensearchClusterPipelineDetails.
        :type max_ocpu_count: int

        :param min_ocpu_count:
            The value to assign to the min_ocpu_count property of this UpdateOpensearchClusterPipelineDetails.
        :type min_ocpu_count: int

        :param max_memory_gb:
            The value to assign to the max_memory_gb property of this UpdateOpensearchClusterPipelineDetails.
        :type max_memory_gb: int

        :param min_memory_gb:
            The value to assign to the min_memory_gb property of this UpdateOpensearchClusterPipelineDetails.
        :type min_memory_gb: int

        :param pipeline_configuration_body:
            The value to assign to the pipeline_configuration_body property of this UpdateOpensearchClusterPipelineDetails.
        :type pipeline_configuration_body: str

        """
        self.swagger_types = {
            'display_name': 'str',
            'max_ocpu_count': 'int',
            'min_ocpu_count': 'int',
            'max_memory_gb': 'int',
            'min_memory_gb': 'int',
            'pipeline_configuration_body': 'str'
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'max_ocpu_count': 'maxOcpuCount',
            'min_ocpu_count': 'minOcpuCount',
            'max_memory_gb': 'maxMemoryGB',
            'min_memory_gb': 'minMemoryGB',
            'pipeline_configuration_body': 'pipelineConfigurationBody'
        }

        self._display_name = None
        self._max_ocpu_count = None
        self._min_ocpu_count = None
        self._max_memory_gb = None
        self._min_memory_gb = None
        self._pipeline_configuration_body = None

    @property
    def display_name(self):
        """
        **[Required]** Gets the display_name of this UpdateOpensearchClusterPipelineDetails.
        The name of the pipeline. Avoid entering confidential information.


        :return: The display_name of this UpdateOpensearchClusterPipelineDetails.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """
        Sets the display_name of this UpdateOpensearchClusterPipelineDetails.
        The name of the pipeline. Avoid entering confidential information.


        :param display_name: The display_name of this UpdateOpensearchClusterPipelineDetails.
        :type: str
        """
        self._display_name = display_name

    @property
    def max_ocpu_count(self):
        """
        Gets the max_ocpu_count of this UpdateOpensearchClusterPipelineDetails.
        The maximum pipeline capacity, in OCPUs.


        :return: The max_ocpu_count of this UpdateOpensearchClusterPipelineDetails.
        :rtype: int
        """
        return self._max_ocpu_count

    @max_ocpu_count.setter
    def max_ocpu_count(self, max_ocpu_count):
        """
        Sets the max_ocpu_count of this UpdateOpensearchClusterPipelineDetails.
        The maximum pipeline capacity, in OCPUs.


        :param max_ocpu_count: The max_ocpu_count of this UpdateOpensearchClusterPipelineDetails.
        :type: int
        """
        self._max_ocpu_count = max_ocpu_count

    @property
    def min_ocpu_count(self):
        """
        Gets the min_ocpu_count of this UpdateOpensearchClusterPipelineDetails.
        The minimum pipeline capacity, in OCPUs.


        :return: The min_ocpu_count of this UpdateOpensearchClusterPipelineDetails.
        :rtype: int
        """
        return self._min_ocpu_count

    @min_ocpu_count.setter
    def min_ocpu_count(self, min_ocpu_count):
        """
        Sets the min_ocpu_count of this UpdateOpensearchClusterPipelineDetails.
        The minimum pipeline capacity, in OCPUs.


        :param min_ocpu_count: The min_ocpu_count of this UpdateOpensearchClusterPipelineDetails.
        :type: int
        """
        self._min_ocpu_count = min_ocpu_count

    @property
    def max_memory_gb(self):
        """
        Gets the max_memory_gb of this UpdateOpensearchClusterPipelineDetails.
        The maximum amount of memory in GB, for the pipeline.


        :return: The max_memory_gb of this UpdateOpensearchClusterPipelineDetails.
        :rtype: int
        """
        return self._max_memory_gb

    @max_memory_gb.setter
    def max_memory_gb(self, max_memory_gb):
        """
        Sets the max_memory_gb of this UpdateOpensearchClusterPipelineDetails.
        The maximum amount of memory in GB, for the pipeline.


        :param max_memory_gb: The max_memory_gb of this UpdateOpensearchClusterPipelineDetails.
        :type: int
        """
        self._max_memory_gb = max_memory_gb

    @property
    def min_memory_gb(self):
        """
        Gets the min_memory_gb of this UpdateOpensearchClusterPipelineDetails.
        The minimum amount of memory in GB, for the pipeline.


        :return: The min_memory_gb of this UpdateOpensearchClusterPipelineDetails.
        :rtype: int
        """
        return self._min_memory_gb

    @min_memory_gb.setter
    def min_memory_gb(self, min_memory_gb):
        """
        Sets the min_memory_gb of this UpdateOpensearchClusterPipelineDetails.
        The minimum amount of memory in GB, for the pipeline.


        :param min_memory_gb: The min_memory_gb of this UpdateOpensearchClusterPipelineDetails.
        :type: int
        """
        self._min_memory_gb = min_memory_gb

    @property
    def pipeline_configuration_body(self):
        """
        Gets the pipeline_configuration_body of this UpdateOpensearchClusterPipelineDetails.
        The pipeline configuration in YAML format. The command accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \\.


        :return: The pipeline_configuration_body of this UpdateOpensearchClusterPipelineDetails.
        :rtype: str
        """
        return self._pipeline_configuration_body

    @pipeline_configuration_body.setter
    def pipeline_configuration_body(self, pipeline_configuration_body):
        """
        Sets the pipeline_configuration_body of this UpdateOpensearchClusterPipelineDetails.
        The pipeline configuration in YAML format. The command accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \\.


        :param pipeline_configuration_body: The pipeline_configuration_body of this UpdateOpensearchClusterPipelineDetails.
        :type: str
        """
        self._pipeline_configuration_body = pipeline_configuration_body

    def __repr__(self):
        return formatted_flat_dict(self)

    def __eq__(self, other):
        if other is None:
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        return not self == other
