# coding: utf-8
# Copyright (c) 2016, 2025, Oracle and/or its affiliates.  All rights reserved.
# This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.

# NOTE: This class is auto generated by OracleSDKGenerator. DO NOT EDIT. API Version: 20160918


from oci.util import formatted_flat_dict, NONE_SENTINEL, value_allowed_none_or_none_sentinel  # noqa: F401
from oci.decorators import init_model_state_from_kwargs


@init_model_state_from_kwargs
class ComputeGpuMemoryFabric(object):
    """
    The customer facing object includes GPU memory fabric details.
    """

    #: A constant which can be used with the lifecycle_state property of a ComputeGpuMemoryFabric.
    #: This constant has a value of "AVAILABLE"
    LIFECYCLE_STATE_AVAILABLE = "AVAILABLE"

    #: A constant which can be used with the lifecycle_state property of a ComputeGpuMemoryFabric.
    #: This constant has a value of "OCCUPIED"
    LIFECYCLE_STATE_OCCUPIED = "OCCUPIED"

    #: A constant which can be used with the lifecycle_state property of a ComputeGpuMemoryFabric.
    #: This constant has a value of "PROVISIONING"
    LIFECYCLE_STATE_PROVISIONING = "PROVISIONING"

    #: A constant which can be used with the lifecycle_state property of a ComputeGpuMemoryFabric.
    #: This constant has a value of "DEGRADED"
    LIFECYCLE_STATE_DEGRADED = "DEGRADED"

    #: A constant which can be used with the lifecycle_state property of a ComputeGpuMemoryFabric.
    #: This constant has a value of "UNAVAILABLE"
    LIFECYCLE_STATE_UNAVAILABLE = "UNAVAILABLE"

    #: A constant which can be used with the fabric_health property of a ComputeGpuMemoryFabric.
    #: This constant has a value of "HEALTHY"
    FABRIC_HEALTH_HEALTHY = "HEALTHY"

    #: A constant which can be used with the fabric_health property of a ComputeGpuMemoryFabric.
    #: This constant has a value of "UNHEALTHY"
    FABRIC_HEALTH_UNHEALTHY = "UNHEALTHY"

    def __init__(self, **kwargs):
        """
        Initializes a new ComputeGpuMemoryFabric object with values from keyword arguments.
        The following keyword arguments are supported (corresponding to the getters/setters of this class):

        :param id:
            The value to assign to the id property of this ComputeGpuMemoryFabric.
        :type id: str

        :param compartment_id:
            The value to assign to the compartment_id property of this ComputeGpuMemoryFabric.
        :type compartment_id: str

        :param compute_hpc_island_id:
            The value to assign to the compute_hpc_island_id property of this ComputeGpuMemoryFabric.
        :type compute_hpc_island_id: str

        :param compute_network_block_id:
            The value to assign to the compute_network_block_id property of this ComputeGpuMemoryFabric.
        :type compute_network_block_id: str

        :param compute_local_block_id:
            The value to assign to the compute_local_block_id property of this ComputeGpuMemoryFabric.
        :type compute_local_block_id: str

        :param lifecycle_state:
            The value to assign to the lifecycle_state property of this ComputeGpuMemoryFabric.
            Allowed values for this property are: "AVAILABLE", "OCCUPIED", "PROVISIONING", "DEGRADED", "UNAVAILABLE", 'UNKNOWN_ENUM_VALUE'.
            Any unrecognized values returned by a service will be mapped to 'UNKNOWN_ENUM_VALUE'.
        :type lifecycle_state: str

        :param fabric_health:
            The value to assign to the fabric_health property of this ComputeGpuMemoryFabric.
            Allowed values for this property are: "HEALTHY", "UNHEALTHY", 'UNKNOWN_ENUM_VALUE'.
            Any unrecognized values returned by a service will be mapped to 'UNKNOWN_ENUM_VALUE'.
        :type fabric_health: str

        :param additional_data:
            The value to assign to the additional_data property of this ComputeGpuMemoryFabric.
        :type additional_data: dict(str, object)

        :param healthy_host_count:
            The value to assign to the healthy_host_count property of this ComputeGpuMemoryFabric.
        :type healthy_host_count: int

        :param total_host_count:
            The value to assign to the total_host_count property of this ComputeGpuMemoryFabric.
        :type total_host_count: int

        :param time_created:
            The value to assign to the time_created property of this ComputeGpuMemoryFabric.
        :type time_created: datetime

        :param defined_tags:
            The value to assign to the defined_tags property of this ComputeGpuMemoryFabric.
        :type defined_tags: dict(str, dict(str, object))

        :param freeform_tags:
            The value to assign to the freeform_tags property of this ComputeGpuMemoryFabric.
        :type freeform_tags: dict(str, str)

        :param system_tags:
            The value to assign to the system_tags property of this ComputeGpuMemoryFabric.
        :type system_tags: dict(str, dict(str, object))

        :param display_name:
            The value to assign to the display_name property of this ComputeGpuMemoryFabric.
        :type display_name: str

        """
        self.swagger_types = {
            'id': 'str',
            'compartment_id': 'str',
            'compute_hpc_island_id': 'str',
            'compute_network_block_id': 'str',
            'compute_local_block_id': 'str',
            'lifecycle_state': 'str',
            'fabric_health': 'str',
            'additional_data': 'dict(str, object)',
            'healthy_host_count': 'int',
            'total_host_count': 'int',
            'time_created': 'datetime',
            'defined_tags': 'dict(str, dict(str, object))',
            'freeform_tags': 'dict(str, str)',
            'system_tags': 'dict(str, dict(str, object))',
            'display_name': 'str'
        }
        self.attribute_map = {
            'id': 'id',
            'compartment_id': 'compartmentId',
            'compute_hpc_island_id': 'computeHpcIslandId',
            'compute_network_block_id': 'computeNetworkBlockId',
            'compute_local_block_id': 'computeLocalBlockId',
            'lifecycle_state': 'lifecycleState',
            'fabric_health': 'fabricHealth',
            'additional_data': 'additionalData',
            'healthy_host_count': 'healthyHostCount',
            'total_host_count': 'totalHostCount',
            'time_created': 'timeCreated',
            'defined_tags': 'definedTags',
            'freeform_tags': 'freeformTags',
            'system_tags': 'systemTags',
            'display_name': 'displayName'
        }
        self._id = None
        self._compartment_id = None
        self._compute_hpc_island_id = None
        self._compute_network_block_id = None
        self._compute_local_block_id = None
        self._lifecycle_state = None
        self._fabric_health = None
        self._additional_data = None
        self._healthy_host_count = None
        self._total_host_count = None
        self._time_created = None
        self._defined_tags = None
        self._freeform_tags = None
        self._system_tags = None
        self._display_name = None

    @property
    def id(self):
        """
        **[Required]** Gets the id of this ComputeGpuMemoryFabric.
        The `OCID`__ for the Customer-unique GPU memory fabric

        __ https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm


        :return: The id of this ComputeGpuMemoryFabric.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this ComputeGpuMemoryFabric.
        The `OCID`__ for the Customer-unique GPU memory fabric

        __ https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm


        :param id: The id of this ComputeGpuMemoryFabric.
        :type: str
        """
        self._id = id

    @property
    def compartment_id(self):
        """
        **[Required]** Gets the compartment_id of this ComputeGpuMemoryFabric.
        The `OCID`__ for the compartment. This should always be the root
        compartment.

        __ https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm


        :return: The compartment_id of this ComputeGpuMemoryFabric.
        :rtype: str
        """
        return self._compartment_id

    @compartment_id.setter
    def compartment_id(self, compartment_id):
        """
        Sets the compartment_id of this ComputeGpuMemoryFabric.
        The `OCID`__ for the compartment. This should always be the root
        compartment.

        __ https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm


        :param compartment_id: The compartment_id of this ComputeGpuMemoryFabric.
        :type: str
        """
        self._compartment_id = compartment_id

    @property
    def compute_hpc_island_id(self):
        """
        **[Required]** Gets the compute_hpc_island_id of this ComputeGpuMemoryFabric.
        The `OCID`__ for Customer-unique HPC Island

        __ https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm


        :return: The compute_hpc_island_id of this ComputeGpuMemoryFabric.
        :rtype: str
        """
        return self._compute_hpc_island_id

    @compute_hpc_island_id.setter
    def compute_hpc_island_id(self, compute_hpc_island_id):
        """
        Sets the compute_hpc_island_id of this ComputeGpuMemoryFabric.
        The `OCID`__ for Customer-unique HPC Island

        __ https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm


        :param compute_hpc_island_id: The compute_hpc_island_id of this ComputeGpuMemoryFabric.
        :type: str
        """
        self._compute_hpc_island_id = compute_hpc_island_id

    @property
    def compute_network_block_id(self):
        """
        **[Required]** Gets the compute_network_block_id of this ComputeGpuMemoryFabric.
        The `OCID`__ for Customer-unique Network Block

        __ https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm


        :return: The compute_network_block_id of this ComputeGpuMemoryFabric.
        :rtype: str
        """
        return self._compute_network_block_id

    @compute_network_block_id.setter
    def compute_network_block_id(self, compute_network_block_id):
        """
        Sets the compute_network_block_id of this ComputeGpuMemoryFabric.
        The `OCID`__ for Customer-unique Network Block

        __ https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm


        :param compute_network_block_id: The compute_network_block_id of this ComputeGpuMemoryFabric.
        :type: str
        """
        self._compute_network_block_id = compute_network_block_id

    @property
    def compute_local_block_id(self):
        """
        **[Required]** Gets the compute_local_block_id of this ComputeGpuMemoryFabric.
        The `OCID`__ for Customer-unique Local Block

        __ https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm


        :return: The compute_local_block_id of this ComputeGpuMemoryFabric.
        :rtype: str
        """
        return self._compute_local_block_id

    @compute_local_block_id.setter
    def compute_local_block_id(self, compute_local_block_id):
        """
        Sets the compute_local_block_id of this ComputeGpuMemoryFabric.
        The `OCID`__ for Customer-unique Local Block

        __ https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm


        :param compute_local_block_id: The compute_local_block_id of this ComputeGpuMemoryFabric.
        :type: str
        """
        self._compute_local_block_id = compute_local_block_id

    @property
    def lifecycle_state(self):
        """
        **[Required]** Gets the lifecycle_state of this ComputeGpuMemoryFabric.
        The lifecycle state of the GPU memory fabric

        Allowed values for this property are: "AVAILABLE", "OCCUPIED", "PROVISIONING", "DEGRADED", "UNAVAILABLE", 'UNKNOWN_ENUM_VALUE'.
        Any unrecognized values returned by a service will be mapped to 'UNKNOWN_ENUM_VALUE'.


        :return: The lifecycle_state of this ComputeGpuMemoryFabric.
        :rtype: str
        """
        return self._lifecycle_state

    @lifecycle_state.setter
    def lifecycle_state(self, lifecycle_state):
        """
        Sets the lifecycle_state of this ComputeGpuMemoryFabric.
        The lifecycle state of the GPU memory fabric


        :param lifecycle_state: The lifecycle_state of this ComputeGpuMemoryFabric.
        :type: str
        """
        allowed_values = ["AVAILABLE", "OCCUPIED", "PROVISIONING", "DEGRADED", "UNAVAILABLE"]
        if not value_allowed_none_or_none_sentinel(lifecycle_state, allowed_values):
            lifecycle_state = 'UNKNOWN_ENUM_VALUE'
        self._lifecycle_state = lifecycle_state

    @property
    def fabric_health(self):
        """
        **[Required]** Gets the fabric_health of this ComputeGpuMemoryFabric.
        The health state of the GPU memory fabric

        Allowed values for this property are: "HEALTHY", "UNHEALTHY", 'UNKNOWN_ENUM_VALUE'.
        Any unrecognized values returned by a service will be mapped to 'UNKNOWN_ENUM_VALUE'.


        :return: The fabric_health of this ComputeGpuMemoryFabric.
        :rtype: str
        """
        return self._fabric_health

    @fabric_health.setter
    def fabric_health(self, fabric_health):
        """
        Sets the fabric_health of this ComputeGpuMemoryFabric.
        The health state of the GPU memory fabric


        :param fabric_health: The fabric_health of this ComputeGpuMemoryFabric.
        :type: str
        """
        allowed_values = ["HEALTHY", "UNHEALTHY"]
        if not value_allowed_none_or_none_sentinel(fabric_health, allowed_values):
            fabric_health = 'UNKNOWN_ENUM_VALUE'
        self._fabric_health = fabric_health

    @property
    def additional_data(self):
        """
        Gets the additional_data of this ComputeGpuMemoryFabric.
        Additional data that can be exposed to the customer. Right now it will include the switch tray ids.


        :return: The additional_data of this ComputeGpuMemoryFabric.
        :rtype: dict(str, object)
        """
        return self._additional_data

    @additional_data.setter
    def additional_data(self, additional_data):
        """
        Sets the additional_data of this ComputeGpuMemoryFabric.
        Additional data that can be exposed to the customer. Right now it will include the switch tray ids.


        :param additional_data: The additional_data of this ComputeGpuMemoryFabric.
        :type: dict(str, object)
        """
        self._additional_data = additional_data

    @property
    def healthy_host_count(self):
        """
        **[Required]** Gets the healthy_host_count of this ComputeGpuMemoryFabric.
        The total number of healthy bare metal hosts located in this compute GPU memory fabric.


        :return: The healthy_host_count of this ComputeGpuMemoryFabric.
        :rtype: int
        """
        return self._healthy_host_count

    @healthy_host_count.setter
    def healthy_host_count(self, healthy_host_count):
        """
        Sets the healthy_host_count of this ComputeGpuMemoryFabric.
        The total number of healthy bare metal hosts located in this compute GPU memory fabric.


        :param healthy_host_count: The healthy_host_count of this ComputeGpuMemoryFabric.
        :type: int
        """
        self._healthy_host_count = healthy_host_count

    @property
    def total_host_count(self):
        """
        **[Required]** Gets the total_host_count of this ComputeGpuMemoryFabric.
        The total number of bare metal hosts located in this compute GPU memory fabric.


        :return: The total_host_count of this ComputeGpuMemoryFabric.
        :rtype: int
        """
        return self._total_host_count

    @total_host_count.setter
    def total_host_count(self, total_host_count):
        """
        Sets the total_host_count of this ComputeGpuMemoryFabric.
        The total number of bare metal hosts located in this compute GPU memory fabric.


        :param total_host_count: The total_host_count of this ComputeGpuMemoryFabric.
        :type: int
        """
        self._total_host_count = total_host_count

    @property
    def time_created(self):
        """
        **[Required]** Gets the time_created of this ComputeGpuMemoryFabric.
        The date and time that the compute GPU memory fabric record was created, in the format defined by [RFC3339]
        (https://tools.ietf.org/html/rfc3339).

        Example: `2016-08-25T21:10:29.600Z`


        :return: The time_created of this ComputeGpuMemoryFabric.
        :rtype: datetime
        """
        return self._time_created

    @time_created.setter
    def time_created(self, time_created):
        """
        Sets the time_created of this ComputeGpuMemoryFabric.
        The date and time that the compute GPU memory fabric record was created, in the format defined by [RFC3339]
        (https://tools.ietf.org/html/rfc3339).

        Example: `2016-08-25T21:10:29.600Z`


        :param time_created: The time_created of this ComputeGpuMemoryFabric.
        :type: datetime
        """
        self._time_created = time_created

    @property
    def defined_tags(self):
        """
        Gets the defined_tags of this ComputeGpuMemoryFabric.
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see `Resource Tags`__.

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`

        __ https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm


        :return: The defined_tags of this ComputeGpuMemoryFabric.
        :rtype: dict(str, dict(str, object))
        """
        return self._defined_tags

    @defined_tags.setter
    def defined_tags(self, defined_tags):
        """
        Sets the defined_tags of this ComputeGpuMemoryFabric.
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see `Resource Tags`__.

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`

        __ https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm


        :param defined_tags: The defined_tags of this ComputeGpuMemoryFabric.
        :type: dict(str, dict(str, object))
        """
        self._defined_tags = defined_tags

    @property
    def freeform_tags(self):
        """
        Gets the freeform_tags of this ComputeGpuMemoryFabric.
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see `Resource Tags`__.

        Example: `{\"Department\": \"Finance\"}`

        __ https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm


        :return: The freeform_tags of this ComputeGpuMemoryFabric.
        :rtype: dict(str, str)
        """
        return self._freeform_tags

    @freeform_tags.setter
    def freeform_tags(self, freeform_tags):
        """
        Sets the freeform_tags of this ComputeGpuMemoryFabric.
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see `Resource Tags`__.

        Example: `{\"Department\": \"Finance\"}`

        __ https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm


        :param freeform_tags: The freeform_tags of this ComputeGpuMemoryFabric.
        :type: dict(str, str)
        """
        self._freeform_tags = freeform_tags

    @property
    def system_tags(self):
        """
        Gets the system_tags of this ComputeGpuMemoryFabric.
        Usage of system tag keys. These predefined keys are scoped to namespaces.
        Example: `{ \"orcl-cloud\": { \"free-tier-retained\": \"true\" } }`


        :return: The system_tags of this ComputeGpuMemoryFabric.
        :rtype: dict(str, dict(str, object))
        """
        return self._system_tags

    @system_tags.setter
    def system_tags(self, system_tags):
        """
        Sets the system_tags of this ComputeGpuMemoryFabric.
        Usage of system tag keys. These predefined keys are scoped to namespaces.
        Example: `{ \"orcl-cloud\": { \"free-tier-retained\": \"true\" } }`


        :param system_tags: The system_tags of this ComputeGpuMemoryFabric.
        :type: dict(str, dict(str, object))
        """
        self._system_tags = system_tags

    @property
    def display_name(self):
        """
        Gets the display_name of this ComputeGpuMemoryFabric.
        A user-friendly name. Does not have to be unique, and it's changeable.
        Avoid entering confidential information.


        :return: The display_name of this ComputeGpuMemoryFabric.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """
        Sets the display_name of this ComputeGpuMemoryFabric.
        A user-friendly name. Does not have to be unique, and it's changeable.
        Avoid entering confidential information.


        :param display_name: The display_name of this ComputeGpuMemoryFabric.
        :type: str
        """
        self._display_name = display_name

    def __repr__(self):
        return formatted_flat_dict(self)

    def __eq__(self, other):
        if other is None:
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        return not self == other
