# coding: utf-8
# Copyright (c) 2016, 2025, Oracle and/or its affiliates.  All rights reserved.
# This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.

# NOTE: This class is auto generated by OracleSDKGenerator. DO NOT EDIT. API Version: 20250101


from oci.util import formatted_flat_dict, NONE_SENTINEL, value_allowed_none_or_none_sentinel  # noqa: F401
from oci.decorators import init_model_state_from_kwargs


@init_model_state_from_kwargs
class DistributedAutonomousDatabaseCatalog(object):
    """
    Globally distributed autonomous database catalog.
    """

    #: A constant which can be used with the source property of a DistributedAutonomousDatabaseCatalog.
    #: This constant has a value of "ADB_D"
    SOURCE_ADB_D = "ADB_D"

    def __init__(self, **kwargs):
        """
        Initializes a new DistributedAutonomousDatabaseCatalog object with values from keyword arguments. This class has the following subclasses and if you are using this class as input
        to a service operations then you should favor using a subclass over the base class:

        * :class:`~oci.distributed_database.models.DistributedAutonomousDatabaseCatalogWithDedicatedInfra`

        The following keyword arguments are supported (corresponding to the getters/setters of this class):

        :param source:
            The value to assign to the source property of this DistributedAutonomousDatabaseCatalog.
            Allowed values for this property are: "ADB_D", 'UNKNOWN_ENUM_VALUE'.
            Any unrecognized values returned by a service will be mapped to 'UNKNOWN_ENUM_VALUE'.
        :type source: str

        :param name:
            The value to assign to the name property of this DistributedAutonomousDatabaseCatalog.
        :type name: str

        :param time_created:
            The value to assign to the time_created property of this DistributedAutonomousDatabaseCatalog.
        :type time_created: datetime

        :param time_updated:
            The value to assign to the time_updated property of this DistributedAutonomousDatabaseCatalog.
        :type time_updated: datetime

        """
        self.swagger_types = {
            'source': 'str',
            'name': 'str',
            'time_created': 'datetime',
            'time_updated': 'datetime'
        }
        self.attribute_map = {
            'source': 'source',
            'name': 'name',
            'time_created': 'timeCreated',
            'time_updated': 'timeUpdated'
        }
        self._source = None
        self._name = None
        self._time_created = None
        self._time_updated = None

    @staticmethod
    def get_subtype(object_dictionary):
        """
        Given the hash representation of a subtype of this class,
        use the info in the hash to return the class of the subtype.
        """
        type = object_dictionary['source']

        if type == 'ADB_D':
            return 'DistributedAutonomousDatabaseCatalogWithDedicatedInfra'
        else:
            return 'DistributedAutonomousDatabaseCatalog'

    @property
    def source(self):
        """
        **[Required]** Gets the source of this DistributedAutonomousDatabaseCatalog.
        The source of Globally distributed autonomous database type: Use ADB_D for the Globally distributed autonomous database with
        autonomous dedicated cloudautonomousvmclusters.

        Allowed values for this property are: "ADB_D", 'UNKNOWN_ENUM_VALUE'.
        Any unrecognized values returned by a service will be mapped to 'UNKNOWN_ENUM_VALUE'.


        :return: The source of this DistributedAutonomousDatabaseCatalog.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """
        Sets the source of this DistributedAutonomousDatabaseCatalog.
        The source of Globally distributed autonomous database type: Use ADB_D for the Globally distributed autonomous database with
        autonomous dedicated cloudautonomousvmclusters.


        :param source: The source of this DistributedAutonomousDatabaseCatalog.
        :type: str
        """
        allowed_values = ["ADB_D"]
        if not value_allowed_none_or_none_sentinel(source, allowed_values):
            source = 'UNKNOWN_ENUM_VALUE'
        self._source = source

    @property
    def name(self):
        """
        **[Required]** Gets the name of this DistributedAutonomousDatabaseCatalog.
        The name of catalog.


        :return: The name of this DistributedAutonomousDatabaseCatalog.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this DistributedAutonomousDatabaseCatalog.
        The name of catalog.


        :param name: The name of this DistributedAutonomousDatabaseCatalog.
        :type: str
        """
        self._name = name

    @property
    def time_created(self):
        """
        **[Required]** Gets the time_created of this DistributedAutonomousDatabaseCatalog.
        The time the catalog was created. An RFC3339 formatted datetime string


        :return: The time_created of this DistributedAutonomousDatabaseCatalog.
        :rtype: datetime
        """
        return self._time_created

    @time_created.setter
    def time_created(self, time_created):
        """
        Sets the time_created of this DistributedAutonomousDatabaseCatalog.
        The time the catalog was created. An RFC3339 formatted datetime string


        :param time_created: The time_created of this DistributedAutonomousDatabaseCatalog.
        :type: datetime
        """
        self._time_created = time_created

    @property
    def time_updated(self):
        """
        **[Required]** Gets the time_updated of this DistributedAutonomousDatabaseCatalog.
        The time the catalog was last updated. An RFC3339 formatted datetime string


        :return: The time_updated of this DistributedAutonomousDatabaseCatalog.
        :rtype: datetime
        """
        return self._time_updated

    @time_updated.setter
    def time_updated(self, time_updated):
        """
        Sets the time_updated of this DistributedAutonomousDatabaseCatalog.
        The time the catalog was last updated. An RFC3339 formatted datetime string


        :param time_updated: The time_updated of this DistributedAutonomousDatabaseCatalog.
        :type: datetime
        """
        self._time_updated = time_updated

    def __repr__(self):
        return formatted_flat_dict(self)

    def __eq__(self, other):
        if other is None:
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        return not self == other
