# coding: utf-8
# Copyright (c) 2016, 2025, Oracle and/or its affiliates.  All rights reserved.
# This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.

# NOTE: This class is auto generated by OracleSDKGenerator. DO NOT EDIT. API Version: 20220125


from oci.util import formatted_flat_dict, NONE_SENTINEL, value_allowed_none_or_none_sentinel  # noqa: F401
from oci.decorators import init_model_state_from_kwargs


@init_model_state_from_kwargs
class ObjectProperties(object):
    """
    Properties associated with the object.
    """

    def __init__(self, **kwargs):
        """
        Initializes a new ObjectProperties object with values from keyword arguments.
        The following keyword arguments are supported (corresponding to the getters/setters of this class):

        :param quality_score:
            The value to assign to the quality_score property of this ObjectProperties.
        :type quality_score: float

        :param landmarks:
            The value to assign to the landmarks property of this ObjectProperties.
        :type landmarks: list[oci.ai_vision.models.Landmark]

        :param embeddings:
            The value to assign to the embeddings property of this ObjectProperties.
        :type embeddings: list[float]

        """
        self.swagger_types = {
            'quality_score': 'float',
            'landmarks': 'list[Landmark]',
            'embeddings': 'list[float]'
        }
        self.attribute_map = {
            'quality_score': 'qualityScore',
            'landmarks': 'landmarks',
            'embeddings': 'embeddings'
        }
        self._quality_score = None
        self._landmarks = None
        self._embeddings = None

    @property
    def quality_score(self):
        """
        Gets the quality_score of this ObjectProperties.
        The quality score of the face detected, between 0 and 1.


        :return: The quality_score of this ObjectProperties.
        :rtype: float
        """
        return self._quality_score

    @quality_score.setter
    def quality_score(self, quality_score):
        """
        Sets the quality_score of this ObjectProperties.
        The quality score of the face detected, between 0 and 1.


        :param quality_score: The quality_score of this ObjectProperties.
        :type: float
        """
        self._quality_score = quality_score

    @property
    def landmarks(self):
        """
        Gets the landmarks of this ObjectProperties.
        Face landmarks.


        :return: The landmarks of this ObjectProperties.
        :rtype: list[oci.ai_vision.models.Landmark]
        """
        return self._landmarks

    @landmarks.setter
    def landmarks(self, landmarks):
        """
        Sets the landmarks of this ObjectProperties.
        Face landmarks.


        :param landmarks: The landmarks of this ObjectProperties.
        :type: list[oci.ai_vision.models.Landmark]
        """
        self._landmarks = landmarks

    @property
    def embeddings(self):
        """
        Gets the embeddings of this ObjectProperties.
        The facial feature vectors of detected faces.


        :return: The embeddings of this ObjectProperties.
        :rtype: list[float]
        """
        return self._embeddings

    @embeddings.setter
    def embeddings(self, embeddings):
        """
        Sets the embeddings of this ObjectProperties.
        The facial feature vectors of detected faces.


        :param embeddings: The embeddings of this ObjectProperties.
        :type: list[float]
        """
        self._embeddings = embeddings

    def __repr__(self):
        return formatted_flat_dict(self)

    def __eq__(self, other):
        if other is None:
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        return not self == other
