# coding: utf-8
# Copyright (c) 2016, 2025, Oracle and/or its affiliates.  All rights reserved.
# This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.

# NOTE: This class is auto generated by OracleSDKGenerator. DO NOT EDIT. API Version: 20181201


from oci.util import formatted_flat_dict, NONE_SENTINEL, value_allowed_none_or_none_sentinel  # noqa: F401
from oci.decorators import init_model_state_from_kwargs


@init_model_state_from_kwargs
class CreateUnifiedAuditPolicyDetails(object):
    """
    The details required to create a new unified audit policy.
    """

    def __init__(self, **kwargs):
        """
        Initializes a new CreateUnifiedAuditPolicyDetails object with values from keyword arguments.
        The following keyword arguments are supported (corresponding to the getters/setters of this class):

        :param security_policy_id:
            The value to assign to the security_policy_id property of this CreateUnifiedAuditPolicyDetails.
        :type security_policy_id: str

        :param unified_audit_policy_definition_id:
            The value to assign to the unified_audit_policy_definition_id property of this CreateUnifiedAuditPolicyDetails.
        :type unified_audit_policy_definition_id: str

        :param compartment_id:
            The value to assign to the compartment_id property of this CreateUnifiedAuditPolicyDetails.
        :type compartment_id: str

        :param display_name:
            The value to assign to the display_name property of this CreateUnifiedAuditPolicyDetails.
        :type display_name: str

        :param description:
            The value to assign to the description property of this CreateUnifiedAuditPolicyDetails.
        :type description: str

        :param status:
            The value to assign to the status property of this CreateUnifiedAuditPolicyDetails.
        :type status: str

        :param conditions:
            The value to assign to the conditions property of this CreateUnifiedAuditPolicyDetails.
        :type conditions: list[oci.data_safe.models.PolicyCondition]

        :param freeform_tags:
            The value to assign to the freeform_tags property of this CreateUnifiedAuditPolicyDetails.
        :type freeform_tags: dict(str, str)

        :param defined_tags:
            The value to assign to the defined_tags property of this CreateUnifiedAuditPolicyDetails.
        :type defined_tags: dict(str, dict(str, object))

        """
        self.swagger_types = {
            'security_policy_id': 'str',
            'unified_audit_policy_definition_id': 'str',
            'compartment_id': 'str',
            'display_name': 'str',
            'description': 'str',
            'status': 'str',
            'conditions': 'list[PolicyCondition]',
            'freeform_tags': 'dict(str, str)',
            'defined_tags': 'dict(str, dict(str, object))'
        }
        self.attribute_map = {
            'security_policy_id': 'securityPolicyId',
            'unified_audit_policy_definition_id': 'unifiedAuditPolicyDefinitionId',
            'compartment_id': 'compartmentId',
            'display_name': 'displayName',
            'description': 'description',
            'status': 'status',
            'conditions': 'conditions',
            'freeform_tags': 'freeformTags',
            'defined_tags': 'definedTags'
        }
        self._security_policy_id = None
        self._unified_audit_policy_definition_id = None
        self._compartment_id = None
        self._display_name = None
        self._description = None
        self._status = None
        self._conditions = None
        self._freeform_tags = None
        self._defined_tags = None

    @property
    def security_policy_id(self):
        """
        **[Required]** Gets the security_policy_id of this CreateUnifiedAuditPolicyDetails.
        The OCID of the security policy corresponding to the unified audit policy.


        :return: The security_policy_id of this CreateUnifiedAuditPolicyDetails.
        :rtype: str
        """
        return self._security_policy_id

    @security_policy_id.setter
    def security_policy_id(self, security_policy_id):
        """
        Sets the security_policy_id of this CreateUnifiedAuditPolicyDetails.
        The OCID of the security policy corresponding to the unified audit policy.


        :param security_policy_id: The security_policy_id of this CreateUnifiedAuditPolicyDetails.
        :type: str
        """
        self._security_policy_id = security_policy_id

    @property
    def unified_audit_policy_definition_id(self):
        """
        **[Required]** Gets the unified_audit_policy_definition_id of this CreateUnifiedAuditPolicyDetails.
        The OCID of the associated unified audit policy definition.


        :return: The unified_audit_policy_definition_id of this CreateUnifiedAuditPolicyDetails.
        :rtype: str
        """
        return self._unified_audit_policy_definition_id

    @unified_audit_policy_definition_id.setter
    def unified_audit_policy_definition_id(self, unified_audit_policy_definition_id):
        """
        Sets the unified_audit_policy_definition_id of this CreateUnifiedAuditPolicyDetails.
        The OCID of the associated unified audit policy definition.


        :param unified_audit_policy_definition_id: The unified_audit_policy_definition_id of this CreateUnifiedAuditPolicyDetails.
        :type: str
        """
        self._unified_audit_policy_definition_id = unified_audit_policy_definition_id

    @property
    def compartment_id(self):
        """
        **[Required]** Gets the compartment_id of this CreateUnifiedAuditPolicyDetails.
        The OCID of the compartment in which to create the unified audit policy.


        :return: The compartment_id of this CreateUnifiedAuditPolicyDetails.
        :rtype: str
        """
        return self._compartment_id

    @compartment_id.setter
    def compartment_id(self, compartment_id):
        """
        Sets the compartment_id of this CreateUnifiedAuditPolicyDetails.
        The OCID of the compartment in which to create the unified audit policy.


        :param compartment_id: The compartment_id of this CreateUnifiedAuditPolicyDetails.
        :type: str
        """
        self._compartment_id = compartment_id

    @property
    def display_name(self):
        """
        Gets the display_name of this CreateUnifiedAuditPolicyDetails.
        The display name of the unified audit policy in Data Safe. The name is modifiable and does not need to be unique.


        :return: The display_name of this CreateUnifiedAuditPolicyDetails.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """
        Sets the display_name of this CreateUnifiedAuditPolicyDetails.
        The display name of the unified audit policy in Data Safe. The name is modifiable and does not need to be unique.


        :param display_name: The display_name of this CreateUnifiedAuditPolicyDetails.
        :type: str
        """
        self._display_name = display_name

    @property
    def description(self):
        """
        Gets the description of this CreateUnifiedAuditPolicyDetails.
        The description of the unified audit policy in Data Safe.


        :return: The description of this CreateUnifiedAuditPolicyDetails.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this CreateUnifiedAuditPolicyDetails.
        The description of the unified audit policy in Data Safe.


        :param description: The description of this CreateUnifiedAuditPolicyDetails.
        :type: str
        """
        self._description = description

    @property
    def status(self):
        """
        **[Required]** Gets the status of this CreateUnifiedAuditPolicyDetails.
        Indicates whether the unified audit policy has been enabled or disabled.


        :return: The status of this CreateUnifiedAuditPolicyDetails.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this CreateUnifiedAuditPolicyDetails.
        Indicates whether the unified audit policy has been enabled or disabled.


        :param status: The status of this CreateUnifiedAuditPolicyDetails.
        :type: str
        """
        self._status = status

    @property
    def conditions(self):
        """
        **[Required]** Gets the conditions of this CreateUnifiedAuditPolicyDetails.
        Lists the audit policy provisioning conditions.


        :return: The conditions of this CreateUnifiedAuditPolicyDetails.
        :rtype: list[oci.data_safe.models.PolicyCondition]
        """
        return self._conditions

    @conditions.setter
    def conditions(self, conditions):
        """
        Sets the conditions of this CreateUnifiedAuditPolicyDetails.
        Lists the audit policy provisioning conditions.


        :param conditions: The conditions of this CreateUnifiedAuditPolicyDetails.
        :type: list[oci.data_safe.models.PolicyCondition]
        """
        self._conditions = conditions

    @property
    def freeform_tags(self):
        """
        Gets the freeform_tags of this CreateUnifiedAuditPolicyDetails.
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see `Resource Tags`__

        Example: `{\"Department\": \"Finance\"}`

        __ https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm


        :return: The freeform_tags of this CreateUnifiedAuditPolicyDetails.
        :rtype: dict(str, str)
        """
        return self._freeform_tags

    @freeform_tags.setter
    def freeform_tags(self, freeform_tags):
        """
        Sets the freeform_tags of this CreateUnifiedAuditPolicyDetails.
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see `Resource Tags`__

        Example: `{\"Department\": \"Finance\"}`

        __ https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm


        :param freeform_tags: The freeform_tags of this CreateUnifiedAuditPolicyDetails.
        :type: dict(str, str)
        """
        self._freeform_tags = freeform_tags

    @property
    def defined_tags(self):
        """
        Gets the defined_tags of this CreateUnifiedAuditPolicyDetails.
        Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see `Resource Tags`__
        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`

        __ https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm


        :return: The defined_tags of this CreateUnifiedAuditPolicyDetails.
        :rtype: dict(str, dict(str, object))
        """
        return self._defined_tags

    @defined_tags.setter
    def defined_tags(self, defined_tags):
        """
        Sets the defined_tags of this CreateUnifiedAuditPolicyDetails.
        Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see `Resource Tags`__
        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`

        __ https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm


        :param defined_tags: The defined_tags of this CreateUnifiedAuditPolicyDetails.
        :type: dict(str, dict(str, object))
        """
        self._defined_tags = defined_tags

    def __repr__(self):
        return formatted_flat_dict(self)

    def __eq__(self, other):
        if other is None:
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        return not self == other
